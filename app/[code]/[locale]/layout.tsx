import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { notFound } from "next/navigation";
import "../../globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return [
    { locale: "en", code: "" },
    { locale: "fr", code: "" },
  ];
}

export default async function LocaleLayout({
  params,
  children,
}: {
  params: Promise<{
    locale: string;
  }>;
  children: React.ReactNode;
}) {
  const _params = await params;
  console.log("locale layout params", _params);

  if (!["en", "fr"].includes(_params.locale)) {
    notFound();
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
